{"ast":null,"code":"'use strict';\n\nvar bl = require('bl');\n\nvar inherits = require('inherits');\n\nvar EE = require('events').EventEmitter;\n\nvar Packet = require('./packet');\n\nvar constants = require('./constants');\n\nfunction Parser(opt) {\n  if (!(this instanceof Parser)) return new Parser(opt);\n  this.settings = opt || {};\n  this._states = ['_parseHeader', '_parseLength', '_parsePayload', '_newPacket'];\n\n  this._resetState();\n}\n\ninherits(Parser, EE);\n\nParser.prototype._resetState = function () {\n  this.packet = new Packet();\n  this.error = null;\n  this._list = bl();\n  this._stateCounter = 0;\n};\n\nParser.prototype.parse = function (buf) {\n  if (this.error) this._resetState();\n\n  this._list.append(buf);\n\n  while ((this.packet.length !== -1 || this._list.length > 0) && this[this._states[this._stateCounter]]() && !this.error) {\n    this._stateCounter++;\n    if (this._stateCounter >= this._states.length) this._stateCounter = 0;\n  }\n\n  return this._list.length;\n};\n\nParser.prototype._parseHeader = function () {\n  // There is at least one byte in the buffer\n  var zero = this._list.readUInt8(0);\n\n  this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT];\n  this.packet.retain = (zero & constants.RETAIN_MASK) !== 0;\n  this.packet.qos = zero >> constants.QOS_SHIFT & constants.QOS_MASK;\n  this.packet.dup = (zero & constants.DUP_MASK) !== 0;\n\n  this._list.consume(1);\n\n  return true;\n};\n\nParser.prototype._parseLength = function () {\n  // There is at least one byte in the list\n  var result = this._parseVarByteNum(true);\n\n  if (result) {\n    this.packet.length = result.value;\n\n    this._list.consume(result.bytes);\n  }\n\n  return !!result;\n};\n\nParser.prototype._parsePayload = function () {\n  var result = false; // Do we have a payload? Do we have enough data to complete the payload?\n  // PINGs have no payload\n\n  if (this.packet.length === 0 || this._list.length >= this.packet.length) {\n    this._pos = 0;\n\n    switch (this.packet.cmd) {\n      case 'connect':\n        this._parseConnect();\n\n        break;\n\n      case 'connack':\n        this._parseConnack();\n\n        break;\n\n      case 'publish':\n        this._parsePublish();\n\n        break;\n\n      case 'puback':\n      case 'pubrec':\n      case 'pubrel':\n      case 'pubcomp':\n        this._parseConfirmation();\n\n        break;\n\n      case 'subscribe':\n        this._parseSubscribe();\n\n        break;\n\n      case 'suback':\n        this._parseSuback();\n\n        break;\n\n      case 'unsubscribe':\n        this._parseUnsubscribe();\n\n        break;\n\n      case 'unsuback':\n        this._parseUnsuback();\n\n        break;\n\n      case 'pingreq':\n      case 'pingresp':\n        // These are empty, nothing to do\n        break;\n\n      case 'disconnect':\n        this._parseDisconnect();\n\n        break;\n\n      case 'auth':\n        this._parseAuth();\n\n        break;\n\n      default:\n        this._emitError(new Error('Not supported'));\n\n    }\n\n    result = true;\n  }\n\n  return result;\n};\n\nParser.prototype._parseConnect = function () {\n  var protocolId; // Protocol ID\n\n  var clientId; // Client ID\n\n  var topic; // Will topic\n\n  var payload; // Will payload\n\n  var password; // Password\n\n  var username; // Username\n\n  var flags = {};\n  var packet = this.packet; // Parse protocolId\n\n  protocolId = this._parseString();\n  if (protocolId === null) return this._emitError(new Error('Cannot parse protocolId'));\n\n  if (protocolId !== 'MQTT' && protocolId !== 'MQIsdp') {\n    return this._emitError(new Error('Invalid protocolId'));\n  }\n\n  packet.protocolId = protocolId; // Parse constants version number\n\n  if (this._pos >= this._list.length) return this._emitError(new Error('Packet too short'));\n  packet.protocolVersion = this._list.readUInt8(this._pos);\n\n  if (packet.protocolVersion !== 3 && packet.protocolVersion !== 4 && packet.protocolVersion !== 5) {\n    return this._emitError(new Error('Invalid protocol version'));\n  }\n\n  this._pos++;\n\n  if (this._pos >= this._list.length) {\n    return this._emitError(new Error('Packet too short'));\n  } // Parse connect flags\n\n\n  flags.username = this._list.readUInt8(this._pos) & constants.USERNAME_MASK;\n  flags.password = this._list.readUInt8(this._pos) & constants.PASSWORD_MASK;\n  flags.will = this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK;\n\n  if (flags.will) {\n    packet.will = {};\n    packet.will.retain = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0;\n    packet.will.qos = (this._list.readUInt8(this._pos) & constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT;\n  }\n\n  packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0;\n  this._pos++; // Parse keepalive\n\n  packet.keepalive = this._parseNum();\n  if (packet.keepalive === -1) return this._emitError(new Error('Packet too short')); // parse properties\n\n  if (packet.protocolVersion === 5) {\n    var properties = this._parseProperties();\n\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties;\n    }\n  } // Parse clientId\n\n\n  clientId = this._parseString();\n  if (clientId === null) return this._emitError(new Error('Packet too short'));\n  packet.clientId = clientId;\n\n  if (flags.will) {\n    if (packet.protocolVersion === 5) {\n      var willProperties = this._parseProperties();\n\n      if (Object.getOwnPropertyNames(willProperties).length) {\n        packet.will.properties = willProperties;\n      }\n    } // Parse will topic\n\n\n    topic = this._parseString();\n    if (topic === null) return this._emitError(new Error('Cannot parse will topic'));\n    packet.will.topic = topic; // Parse will payload\n\n    payload = this._parseBuffer();\n    if (payload === null) return this._emitError(new Error('Cannot parse will payload'));\n    packet.will.payload = payload;\n  } // Parse username\n\n\n  if (flags.username) {\n    username = this._parseString();\n    if (username === null) return this._emitError(new Error('Cannot parse username'));\n    packet.username = username;\n  } // Parse password\n\n\n  if (flags.password) {\n    password = this._parseBuffer();\n    if (password === null) return this._emitError(new Error('Cannot parse password'));\n    packet.password = password;\n  } // need for right parse auth packet and self set up\n\n\n  this.settings = packet;\n  return packet;\n};\n\nParser.prototype._parseConnack = function () {\n  var packet = this.packet;\n  if (this._list.length < 2) return null;\n  packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK);\n\n  if (this.settings.protocolVersion === 5) {\n    packet.reasonCode = this._list.readUInt8(this._pos++);\n  } else {\n    packet.returnCode = this._list.readUInt8(this._pos++);\n  }\n\n  if (packet.returnCode === -1 || packet.reasonCode === -1) return this._emitError(new Error('Cannot parse return code')); // mqtt 5 properties\n\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties();\n\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties;\n    }\n  }\n};\n\nParser.prototype._parsePublish = function () {\n  var packet = this.packet;\n  packet.topic = this._parseString();\n  if (packet.topic === null) return this._emitError(new Error('Cannot parse topic')); // Parse messageId\n\n  if (packet.qos > 0) if (!this._parseMessageId()) {\n    return;\n  } // Properties mqtt 5\n\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties();\n\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties;\n    }\n  }\n\n  packet.payload = this._list.slice(this._pos, packet.length);\n};\n\nParser.prototype._parseSubscribe = function () {\n  var packet = this.packet;\n  var topic;\n  var options;\n  var qos;\n  var rh;\n  var rap;\n  var nl;\n  var subscription;\n\n  if (packet.qos !== 1) {\n    return this._emitError(new Error('Wrong subscribe header'));\n  }\n\n  packet.subscriptions = [];\n\n  if (!this._parseMessageId()) {\n    return;\n  } // Properties mqtt 5\n\n\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties();\n\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties;\n    }\n  }\n\n  while (this._pos < packet.length) {\n    // Parse topic\n    topic = this._parseString();\n    if (topic === null) return this._emitError(new Error('Cannot parse topic'));\n    if (this._pos >= packet.length) return this._emitError(new Error('Malformed Subscribe Payload'));\n    options = this._parseByte();\n    qos = options & constants.SUBSCRIBE_OPTIONS_QOS_MASK;\n    nl = (options >> constants.SUBSCRIBE_OPTIONS_NL_SHIFT & constants.SUBSCRIBE_OPTIONS_NL_MASK) !== 0;\n    rap = (options >> constants.SUBSCRIBE_OPTIONS_RAP_SHIFT & constants.SUBSCRIBE_OPTIONS_RAP_MASK) !== 0;\n    rh = options >> constants.SUBSCRIBE_OPTIONS_RH_SHIFT & constants.SUBSCRIBE_OPTIONS_RH_MASK;\n    subscription = {\n      topic: topic,\n      qos: qos\n    }; // mqtt 5 options\n\n    if (this.settings.protocolVersion === 5) {\n      subscription.nl = nl;\n      subscription.rap = rap;\n      subscription.rh = rh;\n    } // Push pair to subscriptions\n\n\n    packet.subscriptions.push(subscription);\n  }\n};\n\nParser.prototype._parseSuback = function () {\n  var packet = this.packet;\n  this.packet.granted = [];\n\n  if (!this._parseMessageId()) {\n    return;\n  } // Properties mqtt 5\n\n\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties();\n\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties;\n    }\n  } // Parse granted QoSes\n\n\n  while (this._pos < this.packet.length) {\n    this.packet.granted.push(this._list.readUInt8(this._pos++));\n  }\n};\n\nParser.prototype._parseUnsubscribe = function () {\n  var packet = this.packet;\n  packet.unsubscriptions = []; // Parse messageId\n\n  if (!this._parseMessageId()) {\n    return;\n  } // Properties mqtt 5\n\n\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties();\n\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties;\n    }\n  }\n\n  while (this._pos < packet.length) {\n    var topic; // Parse topic\n\n    topic = this._parseString();\n    if (topic === null) return this._emitError(new Error('Cannot parse topic')); // Push topic to unsubscriptions\n\n    packet.unsubscriptions.push(topic);\n  }\n};\n\nParser.prototype._parseUnsuback = function () {\n  var packet = this.packet;\n  if (!this._parseMessageId()) return this._emitError(new Error('Cannot parse messageId')); // Properties mqtt 5\n\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties();\n\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties;\n    } // Parse granted QoSes\n\n\n    packet.granted = [];\n\n    while (this._pos < this.packet.length) {\n      this.packet.granted.push(this._list.readUInt8(this._pos++));\n    }\n  }\n}; // parse packets like puback, pubrec, pubrel, pubcomp\n\n\nParser.prototype._parseConfirmation = function () {\n  var packet = this.packet;\n\n  this._parseMessageId();\n\n  if (this.settings.protocolVersion === 5) {\n    if (packet.length > 2) {\n      // response code\n      packet.reasonCode = this._parseByte(); // properies mqtt 5\n\n      var properties = this._parseProperties();\n\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties;\n      }\n    }\n  }\n\n  return true;\n}; // parse disconnect packet\n\n\nParser.prototype._parseDisconnect = function () {\n  var packet = this.packet;\n\n  if (this.settings.protocolVersion === 5) {\n    // response code\n    packet.reasonCode = this._parseByte(); // properies mqtt 5\n\n    var properties = this._parseProperties();\n\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties;\n    }\n  }\n\n  return true;\n}; // parse auth packet\n\n\nParser.prototype._parseAuth = function () {\n  var packet = this.packet;\n\n  if (this.settings.protocolVersion !== 5) {\n    return this._emitError(new Error('Not supported auth packet for this version MQTT'));\n  } // response code\n\n\n  packet.reasonCode = this._parseByte(); // properies mqtt 5\n\n  var properties = this._parseProperties();\n\n  if (Object.getOwnPropertyNames(properties).length) {\n    packet.properties = properties;\n  }\n\n  return true;\n};\n\nParser.prototype._parseMessageId = function () {\n  var packet = this.packet;\n  packet.messageId = this._parseNum();\n\n  if (packet.messageId === null) {\n    this._emitError(new Error('Cannot parse messageId'));\n\n    return false;\n  }\n\n  return true;\n};\n\nParser.prototype._parseString = function (maybeBuffer) {\n  var length = this._parseNum();\n\n  var result;\n  var end = length + this._pos;\n  if (length === -1 || end > this._list.length || end > this.packet.length) return null;\n  result = this._list.toString('utf8', this._pos, end);\n  this._pos += length;\n  return result;\n};\n\nParser.prototype._parseStringPair = function () {\n  return {\n    name: this._parseString(),\n    value: this._parseString()\n  };\n};\n\nParser.prototype._parseBuffer = function () {\n  var length = this._parseNum();\n\n  var result;\n  var end = length + this._pos;\n  if (length === -1 || end > this._list.length || end > this.packet.length) return null;\n  result = this._list.slice(this._pos, end);\n  this._pos += length;\n  return result;\n};\n\nParser.prototype._parseNum = function () {\n  if (this._list.length - this._pos < 2) return -1;\n\n  var result = this._list.readUInt16BE(this._pos);\n\n  this._pos += 2;\n  return result;\n};\n\nParser.prototype._parse4ByteNum = function () {\n  if (this._list.length - this._pos < 4) return -1;\n\n  var result = this._list.readUInt32BE(this._pos);\n\n  this._pos += 4;\n  return result;\n};\n\nParser.prototype._parseVarByteNum = function (fullInfoFlag) {\n  var bytes = 0;\n  var mul = 1;\n  var length = 0;\n  var result = true;\n  var current;\n  var padding = this._pos ? this._pos : 0;\n\n  while (bytes < 5) {\n    current = this._list.readUInt8(padding + bytes++);\n    length += mul * (current & constants.LENGTH_MASK);\n    mul *= 0x80;\n    if ((current & constants.LENGTH_FIN_MASK) === 0) break;\n\n    if (this._list.length <= bytes) {\n      result = false;\n      break;\n    }\n  }\n\n  if (padding) {\n    this._pos += bytes;\n  }\n\n  result = result ? fullInfoFlag ? {\n    bytes: bytes,\n    value: length\n  } : length : false;\n  return result;\n};\n\nParser.prototype._parseByte = function () {\n  var result = this._list.readUInt8(this._pos);\n\n  this._pos++;\n  return result;\n};\n\nParser.prototype._parseByType = function (type) {\n  switch (type) {\n    case 'byte':\n      {\n        return this._parseByte() !== 0;\n      }\n\n    case 'int8':\n      {\n        return this._parseByte();\n      }\n\n    case 'int16':\n      {\n        return this._parseNum();\n      }\n\n    case 'int32':\n      {\n        return this._parse4ByteNum();\n      }\n\n    case 'var':\n      {\n        return this._parseVarByteNum();\n      }\n\n    case 'string':\n      {\n        return this._parseString();\n      }\n\n    case 'pair':\n      {\n        return this._parseStringPair();\n      }\n\n    case 'binary':\n      {\n        return this._parseBuffer();\n      }\n  }\n};\n\nParser.prototype._parseProperties = function () {\n  var length = this._parseVarByteNum();\n\n  var start = this._pos;\n  var end = start + length;\n  var result = {};\n\n  while (this._pos < end) {\n    var type = this._parseByte();\n\n    var name = constants.propertiesCodes[type];\n\n    if (!name) {\n      this._emitError(new Error('Unknown property'));\n\n      return false;\n    } // user properties process\n\n\n    if (name === 'userProperties') {\n      if (!result[name]) {\n        result[name] = {};\n      }\n\n      var currentUserProperty = this._parseByType(constants.propertiesTypes[name]);\n\n      if (result[name][currentUserProperty.name]) {\n        if (Array.isArray(result[name][currentUserProperty.name])) {\n          result[name][currentUserProperty.name].push(currentUserProperty.value);\n        } else {\n          var currentValue = result[name][currentUserProperty.name];\n          result[name][currentUserProperty.name] = [currentValue];\n          result[name][currentUserProperty.name].push(currentUserProperty.value);\n        }\n      } else {\n        result[name][currentUserProperty.name] = currentUserProperty.value;\n      }\n\n      continue;\n    }\n\n    if (result[name]) {\n      if (Array.isArray(result[name])) {\n        result[name].push(this._parseByType(constants.propertiesTypes[name]));\n      } else {\n        result[name] = [result[name]];\n        result[name].push(this._parseByType(constants.propertiesTypes[name]));\n      }\n    } else {\n      result[name] = this._parseByType(constants.propertiesTypes[name]);\n    }\n  }\n\n  return result;\n};\n\nParser.prototype._newPacket = function () {\n  if (this.packet) {\n    this._list.consume(this.packet.length);\n\n    this.emit('packet', this.packet);\n  }\n\n  this.packet = new Packet();\n  this._pos = 0;\n  return true;\n};\n\nParser.prototype._emitError = function (err) {\n  this.error = err;\n  this.emit('error', err);\n};\n\nmodule.exports = Parser;","map":{"version":3,"sources":["/react/cutlery/web-console/node_modules/mqtt-packet/parser.js"],"names":["bl","require","inherits","EE","EventEmitter","Packet","constants","Parser","opt","settings","_states","_resetState","prototype","packet","error","_list","_stateCounter","parse","buf","append","length","_parseHeader","zero","readUInt8","cmd","types","CMD_SHIFT","retain","RETAIN_MASK","qos","QOS_SHIFT","QOS_MASK","dup","DUP_MASK","consume","_parseLength","result","_parseVarByteNum","value","bytes","_parsePayload","_pos","_parseConnect","_parseConnack","_parsePublish","_parseConfirmation","_parseSubscribe","_parseSuback","_parseUnsubscribe","_parseUnsuback","_parseDisconnect","_parseAuth","_emitError","Error","protocolId","clientId","topic","payload","password","username","flags","_parseString","protocolVersion","USERNAME_MASK","PASSWORD_MASK","will","WILL_FLAG_MASK","WILL_RETAIN_MASK","WILL_QOS_MASK","WILL_QOS_SHIFT","clean","CLEAN_SESSION_MASK","keepalive","_parseNum","properties","_parseProperties","Object","getOwnPropertyNames","willProperties","_parseBuffer","sessionPresent","SESSIONPRESENT_MASK","reasonCode","returnCode","_parseMessageId","slice","options","rh","rap","nl","subscription","subscriptions","_parseByte","SUBSCRIBE_OPTIONS_QOS_MASK","SUBSCRIBE_OPTIONS_NL_SHIFT","SUBSCRIBE_OPTIONS_NL_MASK","SUBSCRIBE_OPTIONS_RAP_SHIFT","SUBSCRIBE_OPTIONS_RAP_MASK","SUBSCRIBE_OPTIONS_RH_SHIFT","SUBSCRIBE_OPTIONS_RH_MASK","push","granted","unsubscriptions","messageId","maybeBuffer","end","toString","_parseStringPair","name","readUInt16BE","_parse4ByteNum","readUInt32BE","fullInfoFlag","mul","current","padding","LENGTH_MASK","LENGTH_FIN_MASK","_parseByType","type","start","propertiesCodes","currentUserProperty","propertiesTypes","Array","isArray","currentValue","_newPacket","emit","err","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nvar bl = require('bl')\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar Packet = require('./packet')\nvar constants = require('./constants')\n\nfunction Parser (opt) {\n  if (!(this instanceof Parser)) return new Parser(opt)\n\n  this.settings = opt || {}\n\n  this._states = [\n    '_parseHeader',\n    '_parseLength',\n    '_parsePayload',\n    '_newPacket'\n  ]\n\n  this._resetState()\n}\n\ninherits(Parser, EE)\n\nParser.prototype._resetState = function () {\n  this.packet = new Packet()\n  this.error = null\n  this._list = bl()\n  this._stateCounter = 0\n}\n\nParser.prototype.parse = function (buf) {\n  if (this.error) this._resetState()\n\n  this._list.append(buf)\n\n  while ((this.packet.length !== -1 || this._list.length > 0) &&\n  this[this._states[this._stateCounter]]() &&\n  !this.error) {\n    this._stateCounter++\n\n    if (this._stateCounter >= this._states.length) this._stateCounter = 0\n  }\n\n  return this._list.length\n}\n\nParser.prototype._parseHeader = function () {\n  // There is at least one byte in the buffer\n  var zero = this._list.readUInt8(0)\n  this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT]\n  this.packet.retain = (zero & constants.RETAIN_MASK) !== 0\n  this.packet.qos = (zero >> constants.QOS_SHIFT) & constants.QOS_MASK\n  this.packet.dup = (zero & constants.DUP_MASK) !== 0\n\n  this._list.consume(1)\n\n  return true\n}\n\nParser.prototype._parseLength = function () {\n  // There is at least one byte in the list\n  var result = this._parseVarByteNum(true)\n\n  if (result) {\n    this.packet.length = result.value\n    this._list.consume(result.bytes)\n  }\n\n  return !!result\n}\n\nParser.prototype._parsePayload = function () {\n  var result = false\n\n  // Do we have a payload? Do we have enough data to complete the payload?\n  // PINGs have no payload\n  if (this.packet.length === 0 || this._list.length >= this.packet.length) {\n    this._pos = 0\n\n    switch (this.packet.cmd) {\n      case 'connect':\n        this._parseConnect()\n        break\n      case 'connack':\n        this._parseConnack()\n        break\n      case 'publish':\n        this._parsePublish()\n        break\n      case 'puback':\n      case 'pubrec':\n      case 'pubrel':\n      case 'pubcomp':\n        this._parseConfirmation()\n        break\n      case 'subscribe':\n        this._parseSubscribe()\n        break\n      case 'suback':\n        this._parseSuback()\n        break\n      case 'unsubscribe':\n        this._parseUnsubscribe()\n        break\n      case 'unsuback':\n        this._parseUnsuback()\n        break\n      case 'pingreq':\n      case 'pingresp':\n        // These are empty, nothing to do\n        break\n      case 'disconnect':\n        this._parseDisconnect()\n        break\n      case 'auth':\n        this._parseAuth()\n        break\n      default:\n        this._emitError(new Error('Not supported'))\n    }\n\n    result = true\n  }\n\n  return result\n}\n\nParser.prototype._parseConnect = function () {\n  var protocolId // Protocol ID\n  var clientId // Client ID\n  var topic // Will topic\n  var payload // Will payload\n  var password // Password\n  var username // Username\n  var flags = {}\n  var packet = this.packet\n\n  // Parse protocolId\n  protocolId = this._parseString()\n\n  if (protocolId === null) return this._emitError(new Error('Cannot parse protocolId'))\n  if (protocolId !== 'MQTT' && protocolId !== 'MQIsdp') {\n    return this._emitError(new Error('Invalid protocolId'))\n  }\n\n  packet.protocolId = protocolId\n\n  // Parse constants version number\n  if (this._pos >= this._list.length) return this._emitError(new Error('Packet too short'))\n\n  packet.protocolVersion = this._list.readUInt8(this._pos)\n\n  if (packet.protocolVersion !== 3 && packet.protocolVersion !== 4 && packet.protocolVersion !== 5) {\n    return this._emitError(new Error('Invalid protocol version'))\n  }\n\n  this._pos++\n\n  if (this._pos >= this._list.length) {\n    return this._emitError(new Error('Packet too short'))\n  }\n\n  // Parse connect flags\n  flags.username = (this._list.readUInt8(this._pos) & constants.USERNAME_MASK)\n  flags.password = (this._list.readUInt8(this._pos) & constants.PASSWORD_MASK)\n  flags.will = (this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK)\n\n  if (flags.will) {\n    packet.will = {}\n    packet.will.retain = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0\n    packet.will.qos = (this._list.readUInt8(this._pos) &\n                          constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT\n  }\n\n  packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0\n  this._pos++\n\n  // Parse keepalive\n  packet.keepalive = this._parseNum()\n  if (packet.keepalive === -1) return this._emitError(new Error('Packet too short'))\n\n  // parse properties\n  if (packet.protocolVersion === 5) {\n    var properties = this._parseProperties()\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties\n    }\n  }\n  // Parse clientId\n  clientId = this._parseString()\n  if (clientId === null) return this._emitError(new Error('Packet too short'))\n  packet.clientId = clientId\n\n  if (flags.will) {\n    if (packet.protocolVersion === 5) {\n      var willProperties = this._parseProperties()\n      if (Object.getOwnPropertyNames(willProperties).length) {\n        packet.will.properties = willProperties\n      }\n    }\n    // Parse will topic\n    topic = this._parseString()\n    if (topic === null) return this._emitError(new Error('Cannot parse will topic'))\n    packet.will.topic = topic\n\n    // Parse will payload\n    payload = this._parseBuffer()\n    if (payload === null) return this._emitError(new Error('Cannot parse will payload'))\n    packet.will.payload = payload\n  }\n\n  // Parse username\n  if (flags.username) {\n    username = this._parseString()\n    if (username === null) return this._emitError(new Error('Cannot parse username'))\n    packet.username = username\n  }\n\n  // Parse password\n  if (flags.password) {\n    password = this._parseBuffer()\n    if (password === null) return this._emitError(new Error('Cannot parse password'))\n    packet.password = password\n  }\n  // need for right parse auth packet and self set up\n  this.settings = packet\n\n  return packet\n}\n\nParser.prototype._parseConnack = function () {\n  var packet = this.packet\n\n  if (this._list.length < 2) return null\n\n  packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK)\n  if (this.settings.protocolVersion === 5) {\n    packet.reasonCode = this._list.readUInt8(this._pos++)\n  } else {\n    packet.returnCode = this._list.readUInt8(this._pos++)\n  }\n\n  if (packet.returnCode === -1 || packet.reasonCode === -1) return this._emitError(new Error('Cannot parse return code'))\n  // mqtt 5 properties\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties()\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties\n    }\n  }\n}\n\nParser.prototype._parsePublish = function () {\n  var packet = this.packet\n  packet.topic = this._parseString()\n\n  if (packet.topic === null) return this._emitError(new Error('Cannot parse topic'))\n\n  // Parse messageId\n  if (packet.qos > 0) if (!this._parseMessageId()) { return }\n\n  // Properties mqtt 5\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties()\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties\n    }\n  }\n\n  packet.payload = this._list.slice(this._pos, packet.length)\n}\n\nParser.prototype._parseSubscribe = function () {\n  var packet = this.packet\n  var topic\n  var options\n  var qos\n  var rh\n  var rap\n  var nl\n  var subscription\n\n  if (packet.qos !== 1) {\n    return this._emitError(new Error('Wrong subscribe header'))\n  }\n\n  packet.subscriptions = []\n\n  if (!this._parseMessageId()) { return }\n\n  // Properties mqtt 5\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties()\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties\n    }\n  }\n\n  while (this._pos < packet.length) {\n    // Parse topic\n    topic = this._parseString()\n    if (topic === null) return this._emitError(new Error('Cannot parse topic'))\n    if (this._pos >= packet.length) return this._emitError(new Error('Malformed Subscribe Payload'))\n\n    options = this._parseByte()\n    qos = options & constants.SUBSCRIBE_OPTIONS_QOS_MASK\n    nl = ((options >> constants.SUBSCRIBE_OPTIONS_NL_SHIFT) & constants.SUBSCRIBE_OPTIONS_NL_MASK) !== 0\n    rap = ((options >> constants.SUBSCRIBE_OPTIONS_RAP_SHIFT) & constants.SUBSCRIBE_OPTIONS_RAP_MASK) !== 0\n    rh = (options >> constants.SUBSCRIBE_OPTIONS_RH_SHIFT) & constants.SUBSCRIBE_OPTIONS_RH_MASK\n\n    subscription = { topic: topic, qos: qos }\n\n    // mqtt 5 options\n    if (this.settings.protocolVersion === 5) {\n      subscription.nl = nl\n      subscription.rap = rap\n      subscription.rh = rh\n    }\n\n    // Push pair to subscriptions\n    packet.subscriptions.push(subscription)\n  }\n}\n\nParser.prototype._parseSuback = function () {\n  var packet = this.packet\n  this.packet.granted = []\n\n  if (!this._parseMessageId()) { return }\n\n  // Properties mqtt 5\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties()\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties\n    }\n  }\n\n  // Parse granted QoSes\n  while (this._pos < this.packet.length) {\n    this.packet.granted.push(this._list.readUInt8(this._pos++))\n  }\n}\n\nParser.prototype._parseUnsubscribe = function () {\n  var packet = this.packet\n\n  packet.unsubscriptions = []\n\n  // Parse messageId\n  if (!this._parseMessageId()) { return }\n\n  // Properties mqtt 5\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties()\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties\n    }\n  }\n\n  while (this._pos < packet.length) {\n    var topic\n\n    // Parse topic\n    topic = this._parseString()\n    if (topic === null) return this._emitError(new Error('Cannot parse topic'))\n\n    // Push topic to unsubscriptions\n    packet.unsubscriptions.push(topic)\n  }\n}\n\nParser.prototype._parseUnsuback = function () {\n  var packet = this.packet\n  if (!this._parseMessageId()) return this._emitError(new Error('Cannot parse messageId'))\n  // Properties mqtt 5\n  if (this.settings.protocolVersion === 5) {\n    var properties = this._parseProperties()\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties\n    }\n    // Parse granted QoSes\n    packet.granted = []\n    while (this._pos < this.packet.length) {\n      this.packet.granted.push(this._list.readUInt8(this._pos++))\n    }\n  }\n}\n\n// parse packets like puback, pubrec, pubrel, pubcomp\nParser.prototype._parseConfirmation = function () {\n  var packet = this.packet\n\n  this._parseMessageId()\n\n  if (this.settings.protocolVersion === 5) {\n    if (packet.length > 2) {\n      // response code\n      packet.reasonCode = this._parseByte()\n      // properies mqtt 5\n      var properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n  }\n\n  return true\n}\n\n// parse disconnect packet\nParser.prototype._parseDisconnect = function () {\n  var packet = this.packet\n\n  if (this.settings.protocolVersion === 5) {\n    // response code\n    packet.reasonCode = this._parseByte()\n    // properies mqtt 5\n    var properties = this._parseProperties()\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties\n    }\n  }\n\n  return true\n}\n\n// parse auth packet\nParser.prototype._parseAuth = function () {\n  var packet = this.packet\n\n  if (this.settings.protocolVersion !== 5) {\n    return this._emitError(new Error('Not supported auth packet for this version MQTT'))\n  }\n\n  // response code\n  packet.reasonCode = this._parseByte()\n  // properies mqtt 5\n  var properties = this._parseProperties()\n  if (Object.getOwnPropertyNames(properties).length) {\n    packet.properties = properties\n  }\n\n  return true\n}\n\nParser.prototype._parseMessageId = function () {\n  var packet = this.packet\n\n  packet.messageId = this._parseNum()\n\n  if (packet.messageId === null) {\n    this._emitError(new Error('Cannot parse messageId'))\n    return false\n  }\n\n  return true\n}\n\nParser.prototype._parseString = function (maybeBuffer) {\n  var length = this._parseNum()\n  var result\n  var end = length + this._pos\n\n  if (length === -1 || end > this._list.length || end > this.packet.length) return null\n\n  result = this._list.toString('utf8', this._pos, end)\n  this._pos += length\n\n  return result\n}\n\nParser.prototype._parseStringPair = function () {\n  return {\n    name: this._parseString(),\n    value: this._parseString()\n  }\n}\n\nParser.prototype._parseBuffer = function () {\n  var length = this._parseNum()\n  var result\n  var end = length + this._pos\n\n  if (length === -1 || end > this._list.length || end > this.packet.length) return null\n\n  result = this._list.slice(this._pos, end)\n\n  this._pos += length\n\n  return result\n}\n\nParser.prototype._parseNum = function () {\n  if (this._list.length - this._pos < 2) return -1\n\n  var result = this._list.readUInt16BE(this._pos)\n  this._pos += 2\n\n  return result\n}\n\nParser.prototype._parse4ByteNum = function () {\n  if (this._list.length - this._pos < 4) return -1\n\n  var result = this._list.readUInt32BE(this._pos)\n  this._pos += 4\n\n  return result\n}\n\nParser.prototype._parseVarByteNum = function (fullInfoFlag) {\n  var bytes = 0\n  var mul = 1\n  var length = 0\n  var result = true\n  var current\n  var padding = this._pos ? this._pos : 0\n\n  while (bytes < 5) {\n    current = this._list.readUInt8(padding + bytes++)\n    length += mul * (current & constants.LENGTH_MASK)\n    mul *= 0x80\n\n    if ((current & constants.LENGTH_FIN_MASK) === 0) break\n    if (this._list.length <= bytes) {\n      result = false\n      break\n    }\n  }\n\n  if (padding) {\n    this._pos += bytes\n  }\n\n  result = result\n    ? fullInfoFlag ? {\n      bytes: bytes,\n      value: length\n    } : length\n    : false\n\n  return result\n}\n\nParser.prototype._parseByte = function () {\n  var result = this._list.readUInt8(this._pos)\n  this._pos++\n  return result\n}\n\nParser.prototype._parseByType = function (type) {\n  switch (type) {\n    case 'byte': {\n      return this._parseByte() !== 0\n    }\n    case 'int8': {\n      return this._parseByte()\n    }\n    case 'int16': {\n      return this._parseNum()\n    }\n    case 'int32': {\n      return this._parse4ByteNum()\n    }\n    case 'var': {\n      return this._parseVarByteNum()\n    }\n    case 'string': {\n      return this._parseString()\n    }\n    case 'pair': {\n      return this._parseStringPair()\n    }\n    case 'binary': {\n      return this._parseBuffer()\n    }\n  }\n}\n\nParser.prototype._parseProperties = function () {\n  var length = this._parseVarByteNum()\n  var start = this._pos\n  var end = start + length\n  var result = {}\n  while (this._pos < end) {\n    var type = this._parseByte()\n    var name = constants.propertiesCodes[type]\n    if (!name) {\n      this._emitError(new Error('Unknown property'))\n      return false\n    }\n    // user properties process\n    if (name === 'userProperties') {\n      if (!result[name]) {\n        result[name] = {}\n      }\n      var currentUserProperty = this._parseByType(constants.propertiesTypes[name])\n      if (result[name][currentUserProperty.name]) {\n        if (Array.isArray(result[name][currentUserProperty.name])) {\n          result[name][currentUserProperty.name].push(currentUserProperty.value)\n        } else {\n          var currentValue = result[name][currentUserProperty.name]\n          result[name][currentUserProperty.name] = [currentValue]\n          result[name][currentUserProperty.name].push(currentUserProperty.value)\n        }\n      } else {\n        result[name][currentUserProperty.name] = currentUserProperty.value\n      }\n      continue\n    }\n    if (result[name]) {\n      if (Array.isArray(result[name])) {\n        result[name].push(this._parseByType(constants.propertiesTypes[name]))\n      } else {\n        result[name] = [result[name]]\n        result[name].push(this._parseByType(constants.propertiesTypes[name]))\n      }\n    } else {\n      result[name] = this._parseByType(constants.propertiesTypes[name])\n    }\n  }\n  return result\n}\n\nParser.prototype._newPacket = function () {\n  if (this.packet) {\n    this._list.consume(this.packet.length)\n    this.emit('packet', this.packet)\n  }\n\n  this.packet = new Packet()\n\n  this._pos = 0\n\n  return true\n}\n\nParser.prototype._emitError = function (err) {\n  this.error = err\n  this.emit('error', err)\n}\n\nmodule.exports = Parser\n"]},"metadata":{},"sourceType":"script"}