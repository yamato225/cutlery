{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar writeToStream = require('./writeToStream');\n\nvar EE = require('events').EventEmitter;\n\nvar inherits = require('inherits');\n\nfunction generate(packet, opts) {\n  var stream = new Accumulator();\n  writeToStream(packet, stream, opts);\n  return stream.concat();\n}\n\nfunction Accumulator() {\n  this._array = new Array(20);\n  this._i = 0;\n}\n\ninherits(Accumulator, EE);\n\nAccumulator.prototype.write = function (chunk) {\n  this._array[this._i++] = chunk;\n  return true;\n};\n\nAccumulator.prototype.concat = function () {\n  var length = 0;\n  var lengths = new Array(this._array.length);\n  var list = this._array;\n  var pos = 0;\n  var i;\n  var result;\n\n  for (i = 0; i < list.length && list[i] !== undefined; i++) {\n    if (typeof list[i] !== 'string') lengths[i] = list[i].length;else lengths[i] = Buffer.byteLength(list[i]);\n    length += lengths[i];\n  }\n\n  result = Buffer.allocUnsafe(length);\n\n  for (i = 0; i < list.length && list[i] !== undefined; i++) {\n    if (typeof list[i] !== 'string') {\n      list[i].copy(result, pos);\n      pos += lengths[i];\n    } else {\n      result.write(list[i], pos);\n      pos += lengths[i];\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = generate;","map":{"version":3,"sources":["/react/cutlery/web-console/node_modules/mqtt-packet/generate.js"],"names":["Buffer","require","writeToStream","EE","EventEmitter","inherits","generate","packet","opts","stream","Accumulator","concat","_array","Array","_i","prototype","write","chunk","length","lengths","list","pos","i","result","undefined","byteLength","allocUnsafe","copy","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAApC;;AACA,IAAIE,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,QAAD,CAAP,CAAkBG,YAA3B;;AACA,IAAIC,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AAEA,SAASK,QAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiC;AAC/B,MAAIC,MAAM,GAAG,IAAIC,WAAJ,EAAb;AACAR,EAAAA,aAAa,CAACK,MAAD,EAASE,MAAT,EAAiBD,IAAjB,CAAb;AACA,SAAOC,MAAM,CAACE,MAAP,EAAP;AACD;;AAED,SAASD,WAAT,GAAwB;AACtB,OAAKE,MAAL,GAAc,IAAIC,KAAJ,CAAU,EAAV,CAAd;AACA,OAAKC,EAAL,GAAU,CAAV;AACD;;AAEDT,QAAQ,CAACK,WAAD,EAAcP,EAAd,CAAR;;AAEAO,WAAW,CAACK,SAAZ,CAAsBC,KAAtB,GAA8B,UAAUC,KAAV,EAAiB;AAC7C,OAAKL,MAAL,CAAY,KAAKE,EAAL,EAAZ,IAAyBG,KAAzB;AACA,SAAO,IAAP;AACD,CAHD;;AAKAP,WAAW,CAACK,SAAZ,CAAsBJ,MAAtB,GAA+B,YAAY;AACzC,MAAIO,MAAM,GAAG,CAAb;AACA,MAAIC,OAAO,GAAG,IAAIN,KAAJ,CAAU,KAAKD,MAAL,CAAYM,MAAtB,CAAd;AACA,MAAIE,IAAI,GAAG,KAAKR,MAAhB;AACA,MAAIS,GAAG,GAAG,CAAV;AACA,MAAIC,CAAJ;AACA,MAAIC,MAAJ;;AAEA,OAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,IAAI,CAACF,MAAT,IAAmBE,IAAI,CAACE,CAAD,CAAJ,KAAYE,SAA3C,EAAsDF,CAAC,EAAvD,EAA2D;AACzD,QAAI,OAAOF,IAAI,CAACE,CAAD,CAAX,KAAmB,QAAvB,EAAiCH,OAAO,CAACG,CAAD,CAAP,GAAaF,IAAI,CAACE,CAAD,CAAJ,CAAQJ,MAArB,CAAjC,KACKC,OAAO,CAACG,CAAD,CAAP,GAAatB,MAAM,CAACyB,UAAP,CAAkBL,IAAI,CAACE,CAAD,CAAtB,CAAb;AAELJ,IAAAA,MAAM,IAAIC,OAAO,CAACG,CAAD,CAAjB;AACD;;AAEDC,EAAAA,MAAM,GAAGvB,MAAM,CAAC0B,WAAP,CAAmBR,MAAnB,CAAT;;AAEA,OAAKI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,IAAI,CAACF,MAAT,IAAmBE,IAAI,CAACE,CAAD,CAAJ,KAAYE,SAA3C,EAAsDF,CAAC,EAAvD,EAA2D;AACzD,QAAI,OAAOF,IAAI,CAACE,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AAC/BF,MAAAA,IAAI,CAACE,CAAD,CAAJ,CAAQK,IAAR,CAAaJ,MAAb,EAAqBF,GAArB;AACAA,MAAAA,GAAG,IAAIF,OAAO,CAACG,CAAD,CAAd;AACD,KAHD,MAGO;AACLC,MAAAA,MAAM,CAACP,KAAP,CAAaI,IAAI,CAACE,CAAD,CAAjB,EAAsBD,GAAtB;AACAA,MAAAA,GAAG,IAAIF,OAAO,CAACG,CAAD,CAAd;AACD;AACF;;AAED,SAAOC,MAAP;AACD,CA5BD;;AA8BAK,MAAM,CAACC,OAAP,GAAiBvB,QAAjB","sourcesContent":["'use strict'\n\nvar Buffer = require('safe-buffer').Buffer\nvar writeToStream = require('./writeToStream')\nvar EE = require('events').EventEmitter\nvar inherits = require('inherits')\n\nfunction generate (packet, opts) {\n  var stream = new Accumulator()\n  writeToStream(packet, stream, opts)\n  return stream.concat()\n}\n\nfunction Accumulator () {\n  this._array = new Array(20)\n  this._i = 0\n}\n\ninherits(Accumulator, EE)\n\nAccumulator.prototype.write = function (chunk) {\n  this._array[this._i++] = chunk\n  return true\n}\n\nAccumulator.prototype.concat = function () {\n  var length = 0\n  var lengths = new Array(this._array.length)\n  var list = this._array\n  var pos = 0\n  var i\n  var result\n\n  for (i = 0; i < list.length && list[i] !== undefined; i++) {\n    if (typeof list[i] !== 'string') lengths[i] = list[i].length\n    else lengths[i] = Buffer.byteLength(list[i])\n\n    length += lengths[i]\n  }\n\n  result = Buffer.allocUnsafe(length)\n\n  for (i = 0; i < list.length && list[i] !== undefined; i++) {\n    if (typeof list[i] !== 'string') {\n      list[i].copy(result, pos)\n      pos += lengths[i]\n    } else {\n      result.write(list[i], pos)\n      pos += lengths[i]\n    }\n  }\n\n  return result\n}\n\nmodule.exports = generate\n"]},"metadata":{},"sourceType":"script"}