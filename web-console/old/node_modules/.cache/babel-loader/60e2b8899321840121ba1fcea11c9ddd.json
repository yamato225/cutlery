{"ast":null,"code":"'use strict';\n/**\n * Module dependencies\n */\n\nvar xtend = require('xtend');\n\nvar Readable = require('readable-stream').Readable;\n\nvar streamsOpts = {\n  objectMode: true\n};\nvar defaultStoreOptions = {\n  clean: true\n};\n/**\n * es6-map can preserve insertion order even if ES version is older.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Description\n * It should be noted that a Map which is a map of an object, especially\n * a dictionary of dictionaries, will only map to the object's insertion\n * order. In ES2015 this is ordered for objects but for older versions of\n * ES, this may be random and not ordered.\n *\n */\n\nvar Map = require('es6-map');\n/**\n * In-memory implementation of the message store\n * This can actually be saved into files.\n *\n * @param {Object} [options] - store options\n */\n\n\nfunction Store(options) {\n  if (!(this instanceof Store)) {\n    return new Store(options);\n  }\n\n  this.options = options || {}; // Defaults\n\n  this.options = xtend(defaultStoreOptions, options);\n  this._inflights = new Map();\n}\n/**\n * Adds a packet to the store, a packet is\n * anything that has a messageId property.\n *\n */\n\n\nStore.prototype.put = function (packet, cb) {\n  this._inflights.set(packet.messageId, packet);\n\n  if (cb) {\n    cb();\n  }\n\n  return this;\n};\n/**\n * Creates a stream with all the packets in the store\n *\n */\n\n\nStore.prototype.createStream = function () {\n  var stream = new Readable(streamsOpts);\n  var destroyed = false;\n  var values = [];\n  var i = 0;\n\n  this._inflights.forEach(function (value, key) {\n    values.push(value);\n  });\n\n  stream._read = function () {\n    if (!destroyed && i < values.length) {\n      this.push(values[i++]);\n    } else {\n      this.push(null);\n    }\n  };\n\n  stream.destroy = function () {\n    if (destroyed) {\n      return;\n    }\n\n    var self = this;\n    destroyed = true;\n    process.nextTick(function () {\n      self.emit('close');\n    });\n  };\n\n  return stream;\n};\n/**\n * deletes a packet from the store.\n */\n\n\nStore.prototype.del = function (packet, cb) {\n  packet = this._inflights.get(packet.messageId);\n\n  if (packet) {\n    this._inflights.delete(packet.messageId);\n\n    cb(null, packet);\n  } else if (cb) {\n    cb(new Error('missing packet'));\n  }\n\n  return this;\n};\n/**\n * get a packet from the store.\n */\n\n\nStore.prototype.get = function (packet, cb) {\n  packet = this._inflights.get(packet.messageId);\n\n  if (packet) {\n    cb(null, packet);\n  } else if (cb) {\n    cb(new Error('missing packet'));\n  }\n\n  return this;\n};\n/**\n * Close the store\n */\n\n\nStore.prototype.close = function (cb) {\n  if (this.options.clean) {\n    this._inflights = null;\n  }\n\n  if (cb) {\n    cb();\n  }\n};\n\nmodule.exports = Store;","map":{"version":3,"sources":["/react/cutlery/web-console/node_modules/mqtt/lib/store.js"],"names":["xtend","require","Readable","streamsOpts","objectMode","defaultStoreOptions","clean","Map","Store","options","_inflights","prototype","put","packet","cb","set","messageId","createStream","stream","destroyed","values","i","forEach","value","key","push","_read","length","destroy","self","process","nextTick","emit","del","get","delete","Error","close","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\n/**\n * Module dependencies\n */\nvar xtend = require('xtend')\n\nvar Readable = require('readable-stream').Readable\nvar streamsOpts = { objectMode: true }\nvar defaultStoreOptions = {\n  clean: true\n}\n\n/**\n * es6-map can preserve insertion order even if ES version is older.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Description\n * It should be noted that a Map which is a map of an object, especially\n * a dictionary of dictionaries, will only map to the object's insertion\n * order. In ES2015 this is ordered for objects but for older versions of\n * ES, this may be random and not ordered.\n *\n */\nvar Map = require('es6-map')\n\n/**\n * In-memory implementation of the message store\n * This can actually be saved into files.\n *\n * @param {Object} [options] - store options\n */\nfunction Store (options) {\n  if (!(this instanceof Store)) {\n    return new Store(options)\n  }\n\n  this.options = options || {}\n\n  // Defaults\n  this.options = xtend(defaultStoreOptions, options)\n\n  this._inflights = new Map()\n}\n\n/**\n * Adds a packet to the store, a packet is\n * anything that has a messageId property.\n *\n */\nStore.prototype.put = function (packet, cb) {\n  this._inflights.set(packet.messageId, packet)\n\n  if (cb) {\n    cb()\n  }\n\n  return this\n}\n\n/**\n * Creates a stream with all the packets in the store\n *\n */\nStore.prototype.createStream = function () {\n  var stream = new Readable(streamsOpts)\n  var destroyed = false\n  var values = []\n  var i = 0\n\n  this._inflights.forEach(function (value, key) {\n    values.push(value)\n  })\n\n  stream._read = function () {\n    if (!destroyed && i < values.length) {\n      this.push(values[i++])\n    } else {\n      this.push(null)\n    }\n  }\n\n  stream.destroy = function () {\n    if (destroyed) {\n      return\n    }\n\n    var self = this\n\n    destroyed = true\n\n    process.nextTick(function () {\n      self.emit('close')\n    })\n  }\n\n  return stream\n}\n\n/**\n * deletes a packet from the store.\n */\nStore.prototype.del = function (packet, cb) {\n  packet = this._inflights.get(packet.messageId)\n  if (packet) {\n    this._inflights.delete(packet.messageId)\n    cb(null, packet)\n  } else if (cb) {\n    cb(new Error('missing packet'))\n  }\n\n  return this\n}\n\n/**\n * get a packet from the store.\n */\nStore.prototype.get = function (packet, cb) {\n  packet = this._inflights.get(packet.messageId)\n  if (packet) {\n    cb(null, packet)\n  } else if (cb) {\n    cb(new Error('missing packet'))\n  }\n\n  return this\n}\n\n/**\n * Close the store\n */\nStore.prototype.close = function (cb) {\n  if (this.options.clean) {\n    this._inflights = null\n  }\n  if (cb) {\n    cb()\n  }\n}\n\nmodule.exports = Store\n"]},"metadata":{},"sourceType":"script"}